/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const RegisterLazyImport = createFileRoute('/register')()
const ProfileLazyImport = createFileRoute('/profile')()
const LoginLazyImport = createFileRoute('/login')()
const IndexLazyImport = createFileRoute('/')()
const TypesIndexLazyImport = createFileRoute('/types/')()
const ModelsIndexLazyImport = createFileRoute('/models/')()
const CarsIndexLazyImport = createFileRoute('/cars/')()
const TypesCreateLazyImport = createFileRoute('/types/create')()
const StudentsCreateLazyImport = createFileRoute('/students/create')()
const StudentsIdLazyImport = createFileRoute('/students/$id')()
const ModelsCreateLazyImport = createFileRoute('/models/create')()
const TypesEditIdLazyImport = createFileRoute('/types/edit/$id')()
const StudentsEditIdLazyImport = createFileRoute('/students/edit/$id')()

// Create/Update Routes

const RegisterLazyRoute = RegisterLazyImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const ProfileLazyRoute = ProfileLazyImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const TypesIndexLazyRoute = TypesIndexLazyImport.update({
  id: '/types/',
  path: '/types/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/types/index.lazy').then((d) => d.Route))

const ModelsIndexLazyRoute = ModelsIndexLazyImport.update({
  id: '/models/',
  path: '/models/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/models/index.lazy').then((d) => d.Route))

const CarsIndexLazyRoute = CarsIndexLazyImport.update({
  id: '/cars/',
  path: '/cars/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/cars/index.lazy').then((d) => d.Route))

const TypesCreateLazyRoute = TypesCreateLazyImport.update({
  id: '/types/create',
  path: '/types/create',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/types/create.lazy').then((d) => d.Route))

const StudentsCreateLazyRoute = StudentsCreateLazyImport.update({
  id: '/students/create',
  path: '/students/create',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/students/create.lazy').then((d) => d.Route),
)

const StudentsIdLazyRoute = StudentsIdLazyImport.update({
  id: '/students/$id',
  path: '/students/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/students/$id.lazy').then((d) => d.Route))

const ModelsCreateLazyRoute = ModelsCreateLazyImport.update({
  id: '/models/create',
  path: '/models/create',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/models/create.lazy').then((d) => d.Route))

const TypesEditIdLazyRoute = TypesEditIdLazyImport.update({
  id: '/types/edit/$id',
  path: '/types/edit/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/types/edit/$id.lazy').then((d) => d.Route),
)

const StudentsEditIdLazyRoute = StudentsEditIdLazyImport.update({
  id: '/students/edit/$id',
  path: '/students/edit/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/students/edit/$id.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/models/create': {
      id: '/models/create'
      path: '/models/create'
      fullPath: '/models/create'
      preLoaderRoute: typeof ModelsCreateLazyImport
      parentRoute: typeof rootRoute
    }
    '/students/$id': {
      id: '/students/$id'
      path: '/students/$id'
      fullPath: '/students/$id'
      preLoaderRoute: typeof StudentsIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/students/create': {
      id: '/students/create'
      path: '/students/create'
      fullPath: '/students/create'
      preLoaderRoute: typeof StudentsCreateLazyImport
      parentRoute: typeof rootRoute
    }
    '/types/create': {
      id: '/types/create'
      path: '/types/create'
      fullPath: '/types/create'
      preLoaderRoute: typeof TypesCreateLazyImport
      parentRoute: typeof rootRoute
    }
    '/cars/': {
      id: '/cars/'
      path: '/cars'
      fullPath: '/cars'
      preLoaderRoute: typeof CarsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/models/': {
      id: '/models/'
      path: '/models'
      fullPath: '/models'
      preLoaderRoute: typeof ModelsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/types/': {
      id: '/types/'
      path: '/types'
      fullPath: '/types'
      preLoaderRoute: typeof TypesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/students/edit/$id': {
      id: '/students/edit/$id'
      path: '/students/edit/$id'
      fullPath: '/students/edit/$id'
      preLoaderRoute: typeof StudentsEditIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/types/edit/$id': {
      id: '/types/edit/$id'
      path: '/types/edit/$id'
      fullPath: '/types/edit/$id'
      preLoaderRoute: typeof TypesEditIdLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/register': typeof RegisterLazyRoute
  '/models/create': typeof ModelsCreateLazyRoute
  '/students/$id': typeof StudentsIdLazyRoute
  '/students/create': typeof StudentsCreateLazyRoute
  '/types/create': typeof TypesCreateLazyRoute
  '/cars': typeof CarsIndexLazyRoute
  '/models': typeof ModelsIndexLazyRoute
  '/types': typeof TypesIndexLazyRoute
  '/students/edit/$id': typeof StudentsEditIdLazyRoute
  '/types/edit/$id': typeof TypesEditIdLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/register': typeof RegisterLazyRoute
  '/models/create': typeof ModelsCreateLazyRoute
  '/students/$id': typeof StudentsIdLazyRoute
  '/students/create': typeof StudentsCreateLazyRoute
  '/types/create': typeof TypesCreateLazyRoute
  '/cars': typeof CarsIndexLazyRoute
  '/models': typeof ModelsIndexLazyRoute
  '/types': typeof TypesIndexLazyRoute
  '/students/edit/$id': typeof StudentsEditIdLazyRoute
  '/types/edit/$id': typeof TypesEditIdLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/login': typeof LoginLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/register': typeof RegisterLazyRoute
  '/models/create': typeof ModelsCreateLazyRoute
  '/students/$id': typeof StudentsIdLazyRoute
  '/students/create': typeof StudentsCreateLazyRoute
  '/types/create': typeof TypesCreateLazyRoute
  '/cars/': typeof CarsIndexLazyRoute
  '/models/': typeof ModelsIndexLazyRoute
  '/types/': typeof TypesIndexLazyRoute
  '/students/edit/$id': typeof StudentsEditIdLazyRoute
  '/types/edit/$id': typeof TypesEditIdLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/profile'
    | '/register'
    | '/models/create'
    | '/students/$id'
    | '/students/create'
    | '/types/create'
    | '/cars'
    | '/models'
    | '/types'
    | '/students/edit/$id'
    | '/types/edit/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/profile'
    | '/register'
    | '/models/create'
    | '/students/$id'
    | '/students/create'
    | '/types/create'
    | '/cars'
    | '/models'
    | '/types'
    | '/students/edit/$id'
    | '/types/edit/$id'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/profile'
    | '/register'
    | '/models/create'
    | '/students/$id'
    | '/students/create'
    | '/types/create'
    | '/cars/'
    | '/models/'
    | '/types/'
    | '/students/edit/$id'
    | '/types/edit/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
  ProfileLazyRoute: typeof ProfileLazyRoute
  RegisterLazyRoute: typeof RegisterLazyRoute
  ModelsCreateLazyRoute: typeof ModelsCreateLazyRoute
  StudentsIdLazyRoute: typeof StudentsIdLazyRoute
  StudentsCreateLazyRoute: typeof StudentsCreateLazyRoute
  TypesCreateLazyRoute: typeof TypesCreateLazyRoute
  CarsIndexLazyRoute: typeof CarsIndexLazyRoute
  ModelsIndexLazyRoute: typeof ModelsIndexLazyRoute
  TypesIndexLazyRoute: typeof TypesIndexLazyRoute
  StudentsEditIdLazyRoute: typeof StudentsEditIdLazyRoute
  TypesEditIdLazyRoute: typeof TypesEditIdLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  ProfileLazyRoute: ProfileLazyRoute,
  RegisterLazyRoute: RegisterLazyRoute,
  ModelsCreateLazyRoute: ModelsCreateLazyRoute,
  StudentsIdLazyRoute: StudentsIdLazyRoute,
  StudentsCreateLazyRoute: StudentsCreateLazyRoute,
  TypesCreateLazyRoute: TypesCreateLazyRoute,
  CarsIndexLazyRoute: CarsIndexLazyRoute,
  ModelsIndexLazyRoute: ModelsIndexLazyRoute,
  TypesIndexLazyRoute: TypesIndexLazyRoute,
  StudentsEditIdLazyRoute: StudentsEditIdLazyRoute,
  TypesEditIdLazyRoute: TypesEditIdLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/login",
        "/profile",
        "/register",
        "/models/create",
        "/students/$id",
        "/students/create",
        "/types/create",
        "/cars/",
        "/models/",
        "/types/",
        "/students/edit/$id",
        "/types/edit/$id"
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
    "/login": {
      "filePath": "login.lazy.jsx"
    },
    "/profile": {
      "filePath": "profile.lazy.jsx"
    },
    "/register": {
      "filePath": "register.lazy.jsx"
    },
    "/models/create": {
      "filePath": "models/create.lazy.jsx"
    },
    "/students/$id": {
      "filePath": "students/$id.lazy.jsx"
    },
    "/students/create": {
      "filePath": "students/create.lazy.jsx"
    },
    "/types/create": {
      "filePath": "types/create.lazy.jsx"
    },
    "/cars/": {
      "filePath": "cars/index.lazy.jsx"
    },
    "/models/": {
      "filePath": "models/index.lazy.jsx"
    },
    "/types/": {
      "filePath": "types/index.lazy.jsx"
    },
    "/students/edit/$id": {
      "filePath": "students/edit/$id.lazy.jsx"
    },
    "/types/edit/$id": {
      "filePath": "types/edit/$id.lazy.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
